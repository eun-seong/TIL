{"version":3,"sources":["webpack:///./src/components/PostList.tsx","webpack:///./src/pages/posts.tsx"],"names":["Category","styled","h3","mainColor","TitleLink","Link","More","div","PostList","edges","fieldValue","edgesVisibleList","slice","map","index","node","linkto","frontmatter","path","key","to","title","length","Ul","ul","PostsPage","data","useStaticQuery","pageTitle","allMarkdownRemark","group","id"],"mappings":"+JAaMA,EAAWC,IAAOC,GAAV,yEAAGD,CAAH,qDAEHE,KAILC,EAAYH,YAAOI,QAAV,0EAAGJ,CAAH,sHAWTK,EAAOL,IAAOM,IAAV,qEAAGN,CAAH,0CA8BKO,EAzBoB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACrCC,EAAmBF,EAAMG,MAAM,EA9BX,IA+B1B,OACE,oCACE,kBAACZ,EAAD,KAAWU,GAEVC,EAAiBE,KAAI,WAAWC,GAAU,IAAlBC,EAAkB,EAAlBA,KACjBC,EAASN,EAAa,IAAMK,EAAKE,YAAYC,KACnD,OACE,yBAAKC,IAAKL,GACR,kBAACV,EAAD,CAAWgB,GAAIJ,GAASD,EAAKE,YAAYI,WAK9CZ,EAAMa,QA5Ce,GA4CS,KAC7B,kBAAChB,EAAD,KACE,kBAACF,EAAD,CAAWgB,GAAIV,GAAa,WAGhC,+B,wBC9CAa,EAAKtB,IAAOuB,GAAV,4DAAGvB,CAAH,8CAuCOwB,UAfa,WAC1B,IAAMC,EAAOC,yBAnBa,cAqB1B,OACE,kBAAC,IAAD,CAAQC,UAAW,UACjB,kBAAC,IAAD,CAAKP,MAAM,UACX,kBAACE,EAAD,KACGG,EAAKG,kBAAkBC,MAAMjB,KAAI,WAAwBkB,GAAxB,IAAGtB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OAChC,kBAAC,EAAD,CAAUD,MAAOA,EAAOC,WAAYA,EAAYS,IAAKY","file":"component---src-pages-posts-tsx-1ece86d8a803f29b145c.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { MarkdownRemarkEdge } from '../graphql-types';\nimport { mainColor } from '../const';\n\nconst POST_LENGTH: number = 10;\n\ninterface IProps {\n  edges: MarkdownRemarkEdge[];\n  fieldValue: string;\n}\n\nconst Category = styled.h3`\n  border-bottom: 0px;\n  color: ${mainColor};\n  margin: 0 0 0.3rem 0;\n`;\n\nconst TitleLink = styled(Link)`\n  border-bottom: 0px;\n  text-decoration: none;\n  color: black;\n  transition: opacity 0.2s;\n  &:hover {\n    opacity: 0.7;\n  }\n  margin: 0.1rem 0;\n`;\n\nconst More = styled.div`\n  border-bottom: 0px;\n  margin-top: 0.4rem;\n`;\n\nconst PostList: React.FC<IProps> = ({ edges, fieldValue }) => {\n  const edgesVisibleList = edges.slice(0, POST_LENGTH);\n  return (\n    <>\n      <Category>{fieldValue}</Category>\n\n      {edgesVisibleList.map(({ node }, index) => {\n        const linkto = fieldValue + '/' + node.frontmatter.path;\n        return (\n          <div key={index}>\n            <TitleLink to={linkto}>{node.frontmatter.title}</TitleLink>\n          </div>\n        );\n      })}\n\n      {edges.length <= POST_LENGTH ? null : (\n        <More>\n          <TitleLink to={fieldValue}>{'...더보기'}</TitleLink>\n        </More>\n      )}\n      <hr />\n    </>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Query } from '../graphql-types';\n\nimport PostList from '../components/PostList';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Ul = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst LatestPostListQuery = graphql`\n  query PostQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n      group(field: frontmatter___category, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n              path\n            }\n          }\n        }\n        fieldValue\n      }\n    }\n  }\n`;\n\nconst PostsPage: React.FC = () => {\n  const data = useStaticQuery<Query>(LatestPostListQuery);\n\n  return (\n    <Layout pageTitle={'게시글 목록'}>\n      <SEO title='Posts' />\n      <Ul>\n        {data.allMarkdownRemark.group.map(({ edges, fieldValue }, id) => (\n          <PostList edges={edges} fieldValue={fieldValue} key={id} />\n        ))}\n      </Ul>\n    </Layout>\n  );\n};\n\nexport default PostsPage;\n"],"sourceRoot":""}