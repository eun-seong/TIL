{"version":3,"sources":["webpack:///./src/components/utterances.tsx","webpack:///./src/templates/PostTemplate.tsx"],"names":["Utterances","React","memo","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","Date","styled","div","PostTemplate","props","pageContext","title","html","date","console","log","pageTitle","isPost","dangerouslySetInnerHTML","__html"],"mappings":"qJAQMA,EAAyCC,IAAMC,MAAK,YAAc,IAAXC,EAAW,EAAXA,KACrDC,EAAeC,sBAsBrB,OApBAC,2BAAgB,WACd,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAbM,gCAcNR,OACA,aAAc,WACdS,MAAO,aACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,MAG/BhB,EAAakB,QAAQC,YAAYhB,KAChC,CAACJ,IAEG,yBAAKqB,IAAKpB,OAGnBJ,EAAWyB,YAAc,aAEVzB,QCtBT0B,EAAOC,IAAOC,IAAV,yEAAGD,CAAH,mDAMJE,EAA6C5B,IAAMC,MAAK,SAAC4B,GAAU,MACzCA,EAAMC,YAA5BC,EAD+D,EAC/DA,MAAOC,EADwD,EACxDA,KAAMC,EADkD,EAClDA,KAErB,OADAC,QAAQC,IAAIH,GAEV,kBAAC,IAAD,CAAQI,UAAWL,EAAOM,QAAQ,GAChC,kBAAC,EAAD,KAAOJ,GACP,yBAAKK,wBAAyB,CAAEC,OAAQP,KACxC,kBAAC,EAAD,CAAY9B,KAAK,sBAKvB0B,EAAaJ,YAAc,eAEZI","file":"component---src-templates-post-template-tsx-52c3850aca9434a97b7e.js","sourcesContent":["import React, { createRef, useLayoutEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\n\nexport interface IUtterancesProps {\n  repo: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement('script');\n\n    const attributes = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'ðŸ’¬ comment',\n      theme: 'github-light',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Utterances from '../components/utterances';\nimport { ITemplateProps } from '../interface';\n\ntype IPostTemplateProps = ITemplateProps<{\n  html: string;\n  title: string;\n  date: string;\n  category: string;\n}>;\n\nconst Date = styled.div`\n  color: #aaa;\n  font-size: 0.8rem;\n  margin-left: 2rem;\n`;\n\nconst PostTemplate: React.FC<IPostTemplateProps> = React.memo((props) => {\n  const { title, html, date } = props.pageContext;\n  console.log(html);\n  return (\n    <Layout pageTitle={title} isPost={true}>\n      <Date>{date}</Date>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n      <Utterances repo='eun-seong/TIL' />\n    </Layout>\n  );\n});\n\nPostTemplate.displayName = 'PostTemplate';\n\nexport default PostTemplate;\n"],"sourceRoot":""}