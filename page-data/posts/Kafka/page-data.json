{"componentChunkName":"component---src-templates-post-list-template-tsx","path":"/posts/Kafka","result":{"pageContext":{"fieldValue":"Kafka","edges":[{"node":{"frontmatter":{"path":"kafka_spring_kafka_first_sample_project","title":"spring kafka 샘플 프로젝트","category":"Kafka","date":"Jan 26, 2021"},"html":"<ul>\n<li><a href=\"https://github.com/eun-seong/spring-kafka-demo\">Github Repo</a></li>\n</ul>\n<h4>실행 방법</h4>\n<ol>\n<li>\n<p>kafka 실행   </p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/zookeeper-server-start.sh config/zookeeper.properties</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-server-start.sh config/server.properties</span></span></code></pre>\n</li>\n<li>\n<p>스프링 서버 실행   </p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ mvn spring-boot:run</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">$ curl http://localhost:8080/start</span></span></code></pre>\n</li>\n</ol>\n<hr>\n<h3>Spring Reactor</h3>\n<ul>\n<li><code>Mono</code> : 한 개의 값을 전달하는 reactor 객체</li>\n<li>\n<p><a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.htm\"><code>Flux</code></a> : 여러 개의 값을 전달하는 reactor 객체</p>\n<ul>\n<li><code>map()</code> : <code>Flux</code> 데이터를 1-1 방식으로 변환한다. 인자로는 <code>Flux</code>의 타입을 받는다.</li>\n<li><code>flatMap()</code> : <code>Flux</code> 데이터를 1-N 방식으로 변환하여 시퀀스를 생성한다. 인자로는 <code>Flux</code>의 타입을 받는다.</li>\n<li><code>donOnNext()</code> : <code>Flux</code>가 Subscriber에 next 신호를 발생할 때 호출된다. 인자로는 <code>Flux</code>의 타입을 받는다.</li>\n</ul>\n</li>\n</ul>\n<h3><code>pom.xml</code></h3>\n<details>\n<summary>Code 보기</summary>\n<pre class=\"grvsc-container default-dark\" data-language=\"xml\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk17\">&lt;?</span><span class=\"mtk4\">xml</span><span class=\"mtk12\"> version</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;1.0&quot;</span><span class=\"mtk12\"> encoding</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;UTF-8&quot;</span><span class=\"mtk17\">?&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">project</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xmlns</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xmlns:xsi</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">xsi:schemaLocation</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">modelVersion</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">4.0.0</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">modelVersion</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">parent</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.springframework.boot</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">spring-boot-starter-parent</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">2.2.1.RELEASE</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">relativePath</span><span class=\"mtk17\">/&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">&lt;!-- lookup parent from repository --&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">parent</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">com.nhn.forward2019</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">reactive-kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">0.0.1-SNAPSHOT</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">name</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">reactive-kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">name</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">description</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">Demo project for Spring Boot</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">description</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">properties</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">java.version</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">11</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">java.version</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">properties</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependencies</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.springframework.boot</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">spring-boot-starter-webflux</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">&lt;!-- https://mvnrepository.com/artifact/io.projectreactor.kafka/reactor-kafka --&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">io.projectreactor.kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">reactor-kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">1.2.0.RELEASE</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka-test --&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.springframework.kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">spring-kafka</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">2.3.3.RELEASE</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">version</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.springframework.boot</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">spring-boot-starter-test</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">scope</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">test</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">scope</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">exclusions</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">exclusion</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.junit.vintage</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">junit-vintage-engine</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">exclusion</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">exclusions</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">io.projectreactor</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">reactor-test</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">scope</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">test</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">scope</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependency</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">dependencies</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">build</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">plugins</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">plugin</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">org.springframework.boot</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">groupId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">spring-boot-maven-plugin</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">artifactId</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">plugin</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">plugins</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">build</span><span class=\"mtk17\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">project</span><span class=\"mtk17\">&gt;</span></span></span></code></pre>\n</details>\n<ul>\n<li>\n<p>io.projectreactor.kafka:reactor-kafka</p>\n<ul>\n<li>1.2.0.RELEASE</li>\n</ul>\n</li>\n<li>\n<p>org.springframework.kafka:spring-kafka</p>\n<ul>\n<li>2.3.3.RELEASE</li>\n</ul>\n</li>\n<li>org.springframework.boot:spring-boot-starter-test</li>\n</ul>\n<h3><code>KafkaManager</code></h3>\n<details>\n<summary>Code 보기</summary>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Component</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaManager</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BOOTSTRAP_SERVERS</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;localhost:9092&quot;</span><span class=\"mtk1\">;   </span><span class=\"mtk3\">// kafka host</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">consumerProps</span><span class=\"mtk1\">;                    </span><span class=\"mtk3\">// consumer settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">producerProps</span><span class=\"mtk1\">;                    </span><span class=\"mtk3\">// producer settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">KafkaManager</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">consumerProps</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Map</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BOOTSTRAP_SERVERS_CONFIG</span><span class=\"mtk1\">, BOOTSTRAP_SERVERS,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CLIENT_ID_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;consumer&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">GROUP_ID_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;group&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">KEY_DESERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringDeserializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">VALUE_DESERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringDeserializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ConsumerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUTO_OFFSET_RESET_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;earliest&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">producerProps</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Map</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BOOTSTRAP_SERVERS_CONFIG</span><span class=\"mtk1\">, BOOTSTRAP_SERVERS,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CLIENT_ID_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;producer&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ACKS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;all&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">KEY_SERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringSerializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">VALUE_SERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringSerializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Flux</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SenderResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk11\">producer</span><span class=\"mtk1\">(</span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Publisher</span><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">?</span><span class=\"mtk1\"> </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SenderRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">publisher</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SenderOptions</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">options</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">SenderOptions</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(producerProps);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">KafkaSender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(options)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(publisher);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Flux</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ReceiverRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk11\">consumer</span><span class=\"mtk1\">(</span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">topic</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceiverOptions</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">options</span><span class=\"mtk1\"> = ReceiverOptions.&lt;String, String&gt;</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(consumerProps)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">subscription</span><span class=\"mtk1\">(</span><span class=\"mtk12\">List</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(topic));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">KafkaReceiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(options)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">receive</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n<ul>\n<li>\n<p>ProducerConfig</p>\n<ul>\n<li><code>BOOTSTRAP_SERVERS_CONFIG</code> : kafka server</li>\n<li><code>CLIENT_ID_CONFIG</code> : client id</li>\n<li><code>ACKS_CONFIG</code> : 프로듀서가 메세지를 보내고 그 메세지를 kafka가 잘 받았는지 확인할 것인지 아닌지</li>\n<li><code>KEY_SERIALIZER_CLASS_CONFIG</code> : broker에게 보낼 객체를 바이트 배열로 변환하기 위해 serializing을 한다.</li>\n<li><code>VALUE_SERIALIZER_CLASS_CONFIG</code> : broker에게 보낼 객체를 바이트 배열로 변환하기 위해 serializing을 한다.</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://kafka.apache.org/24/javadoc/org/apache/kafka/clients/consumer/ConsumerConfig.html\"><code>ConsumerConfig</code></a></p>\n<ul>\n<li><code>BOOTSTRAP_SERVERS_CONFIG</code> : kafka server</li>\n<li><code>CLIENT_ID_CONFIG</code> : client id</li>\n<li><code>GROUP_ID_CONFIG</code> : group id</li>\n<li><code>KEY_DESERIALIZER_CLASS_CONFIG</code> : broker가 보낸 바이트 배열을 객체로 변환하기 위해 deserializing을 한다.</li>\n<li><code>VALUE_DESERIALIZER_CLASS_CONFIG</code> : broker가 보낸 바이트 배열을 객체로 변환하기 위해 deserializing을 한다.</li>\n<li>\n<p><code>AUTO_OFFSET_RESET_CONFIG</code> : auto.offset.reset</p>\n<ul>\n<li>latest : 가장 마지막 offset부터</li>\n<li>earliest : 가장 처음 offset부터</li>\n<li>none : 해당 consumer group이 가져가고자 하는 topic의 consuer offset 정보가 없으면 exception을 발생시킴.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4><code>producer()</code></h4>\n<ul>\n<li>인자로 토픽 이름을 받아 <code>SenderOptions</code> 옵션을 생성한다.</li>\n<li>\n<p><code>KafkaSender.create(SenderOptions&#x3C;K,V> options)</code></p>\n<ul>\n<li>kafka에 레코드 시퀀스를 보내고 각 레코드의 파티션과 오프셋이 포함된 레코드 메타데이터 응답의 Flux를 반환한다.</li>\n<li>응답은 각 파티션에 대해 재시도 없이 순서가 지정되지만, 다른 파티션의 응답은 요청과 다른 순서로 인터리브될 수 있댜.</li>\n<li>추가 상관 관계 메타데이터는 Kafka로 전송되지 않지만 요청에 대한 응답을 일치시키기 위해 응답 Flux에 포함되어 있는 SenderRecord에서 전달될 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4><code>consumer()</code></h4>\n<ul>\n<li>인자로 토픽 이름을 받아 <code>ReceiverOptions</code> 옵션을 생성한다.</li>\n<li>\n<p><code>KafkaReceiver.create(ReceiverOptions&#x3C;K,V> options)</code></p>\n<ul>\n<li>레코드나 receiver에 설정된 파티션을 컨슈밍하는 Kafka receiver를 시작한다.</li>\n<li>레코드는 kafka에서 소비되고 Flux에서 요청을 할 때 Flux가 반환된다.</li>\n<li>Flux가 종료될 때 kafka 컨슈머도 종료된다.</li>\n</ul>\n</li>\n</ul>\n<h3>DemoController</h3>\n<details>\n<summary>Code 보기</summary>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">RestController</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">RequestMapping</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;/&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DemoController</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DemoService</span><span class=\"mtk1\"> </span><span class=\"mtk12\">service</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk10\">AtomicBoolean</span><span class=\"mtk1\"> </span><span class=\"mtk12\">running</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DemoController</span><span class=\"mtk1\">(</span><span class=\"mtk10\">DemoService</span><span class=\"mtk1\"> </span><span class=\"mtk12\">service</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">service</span><span class=\"mtk1\"> = service;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">running</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AtomicBoolean</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">GetMapping</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;/start&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Mono</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">start</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">running</span><span class=\"mtk1\">.</span><span class=\"mtk11\">compareAndSet</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">?</span><span class=\"mtk1\"> </span><span class=\"mtk12\">service</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Already Running&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">GetMapping</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;/stop&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Mono</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">stop</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">running</span><span class=\"mtk1\">.</span><span class=\"mtk11\">compareAndSet</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">?</span><span class=\"mtk1\"> </span><span class=\"mtk12\">service</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stop</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Not Running Now&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n<ul>\n<li>\n<p><code>@RestController</code></p>\n<ul>\n<li>View를 반환하는 <code>@Controller</code>에 Data를 반환하는 <code>@ResponseBody</code>가 추가된 어노테이션</li>\n<li>json 형태로 객체 데이터를 반환한다.</li>\n</ul>\n</li>\n<li>\n<p><code>@RequestMapping({NAME})</code></p>\n<ul>\n<li><code>NAME</code>과 일치하는 path는 모두 해당 컨트롤러로 전달된다.</li>\n</ul>\n</li>\n<li>\n<p><code>@GetMapping({NAME})</code></p>\n<ul>\n<li>컨트롤러의 path 뒤에 <code>NAME</code>과 일치하는 path는 모두 해당 메소드로 전달된다.</li>\n</ul>\n</li>\n<li>\n<p><code>Atomic</code> Type</p>\n<ul>\n<li>멀티스레드에서 동시성 문제를 해결할 수 있는 타입이다.</li>\n<li>해당 프로젝트에서는 spring 서버의 상태를 동기화하기 위해 사용되었다.</li>\n</ul>\n</li>\n<li>콘솔에서 실행할 때 맵핑메소드가 리턴하는 값이 콘솔에 출력된다.</li>\n</ul>\n<h3>DemoService</h3>\n<details>\n<summary>Code 보기</summary>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Service</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DemoService</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Logger</span><span class=\"mtk1\"> </span><span class=\"mtk12\">logger</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LoggerFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLogger</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DemoService</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SERVICENAME</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;demo&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">KafkaManager</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Disposable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">disposable</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DemoService</span><span class=\"mtk1\">(</span><span class=\"mtk10\">KafkaManager</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\"> = kafkaManager;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Mono</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">start</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">produce</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;START&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Mono</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">stop</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">dispose</span><span class=\"mtk1\">(disposable);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;STOP&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">dispose</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Disposable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">disposable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (disposable != </span><span class=\"mtk4\">null</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">disposable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isDisposed</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disposable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">dispose</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    /***** produce *****/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">produce</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Flux</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SenderRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">records</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">generateSource</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">doOnNext</span><span class=\"mtk1\">(comp </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">logger</span><span class=\"mtk1\">.</span><span class=\"mtk11\">info</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Create - name: {}</span><span class=\"mtk6\">\\t</span><span class=\"mtk8\">major: {}&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk12\">comp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getT1</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">comp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getT2</span><span class=\"mtk1\">()))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(Object</span><span class=\"mtk15\">::</span><span class=\"mtk1\">toString)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(i </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SenderRecord</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ProducerRecord</span><span class=\"mtk1\">&lt;&gt;(SERVICENAME, i, i), i));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">producer</span><span class=\"mtk1\">(records)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    /***** consume *****/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        disposable = </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">consumer</span><span class=\"mtk1\">(SERVICENAME)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    /***** general *****/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Flux</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Tuple2</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk11\">generateSource</span><span class=\"mtk1\">(){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Flux</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Tuples</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;eun&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;computer&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Tuples</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;lobster&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;statistics&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Tuples</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;zooho&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;computer&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Tuples</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;hyeon&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;mechanical&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Tuples</span><span class=\"mtk1\">.</span><span class=\"mtk11\">of</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;nayng&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;electronic&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">delayElements</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Duration</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ofMillis</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n<ul>\n<li>\n<p><code>@Service</code></p>\n<ul>\n<li>해당 어노테이션을 붙인 클래스를 서비스가 된다.</li>\n<li>컨트롤러에서 서비스를 생성자 주입한다.</li>\n</ul>\n</li>\n<li>\n<p><code>start()</code> method</p>\n<ul>\n<li>서버가 동작하면 <code>consume()</code>과 <code>produce()</code> 메소드르 실행한다. </li>\n</ul>\n</li>\n</ul>\n<h4><code>produce()</code></h4>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">produce</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Flux</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SenderRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">records</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">generateSource</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">doOnNext</span><span class=\"mtk1\">(comp </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">logger</span><span class=\"mtk1\">.</span><span class=\"mtk11\">info</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Create - name: {}</span><span class=\"mtk6\">\\t</span><span class=\"mtk8\">major: {}&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk12\">comp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getT1</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">comp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getT2</span><span class=\"mtk1\">()))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(Object</span><span class=\"mtk15\">::</span><span class=\"mtk1\">toString)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(i </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SenderRecord</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ProducerRecord</span><span class=\"mtk1\">&lt;&gt;(SERVICENAME, i, i), i));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">producer</span><span class=\"mtk1\">(records)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li>\n<p><code>Flux</code>가 값을 1초마다 publish한다.</p>\n<ul>\n<li><code>doOnNext()</code>에서 <code>Flux</code> 객체를 받아 컨슘한 후 로그를 찍는다.</li>\n</ul>\n</li>\n<li>\n<p><code>SenderRecord.create(ProducerRecord&#x3C;topic, K, V> record, T correlationMetadata)</code></p>\n<ul>\n<li>레코드에 카프카 토픽 파티션을 추가하는 kafka sender 객체를 생성한다.</li>\n<li><code>correlationMetadata</code>는 kafka로 전송되진 않지만 <code>SenderResult</code>를 이 레코드에 일치시키기 위한 응답에 포함된 부가적인 상관 관계 메타데이터이다.</li>\n</ul>\n</li>\n<li>\n<p><code>ProducerRecord&#x3C;>(String topic, K key, V value)</code> </p>\n<ul>\n<li>kafka로 보낼 key/value 이다.</li>\n</ul>\n</li>\n<li>\n<p><code>kafkaManager.producer()</code>는 <code>Flux&#x3C;SenderRecord&#x3C;String, String>></code>를 반환한다.</p>\n<ul>\n<li><code>Flux.subscribe()</code>는 해당 <code>Flux</code>를 subscribe하고 무한대의 요구를 요청할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4><code>consume()</code></h4>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    disposable = </span><span class=\"mtk12\">kafkaManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">consumer</span><span class=\"mtk1\">(SERVICENAME)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li>\n<p><code>kafkaManager.producer()</code>는 <code>Flux&#x3C;ReceiverRecord&#x3C;String, String>></code>를 반환한다.</p>\n<ul>\n<li><code>Flux.subscribe()</code>는 해당 <code>Flux</code>를 subscribe하고 무한대의 요구를 요청할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk17 { color: #808080; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk6 { color: #D7BA7D; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","id":"e886657d-6201-501b-9a43-b69c4b1f7372","excerpt":"Github Repo 실행 방법 kafka 실행    스프링 서버 실행    Spring Reactor Mono : 한 개의 값을 전달하는 reactor 객체 Flux : 여러 개의 값을 전달하는 reactor 객체 map() : Flux 데이터를 1-1 방식으로 변환한다. 인자로는 Flux의 타입을 받는다. flatMap() : Flux 데이터를 1-N…"}},{"node":{"frontmatter":{"path":"kafka_spring_kafka_reference_translate","title":"[번역] spring kafka 공식 reference","category":"Kafka","date":"Jan 26, 2021"},"html":"<p>원본 : <a href=\"https://docs.spring.io/spring-kafka/reference/html/#reference\">https://docs.spring.io/spring-kafka/reference/html/#reference</a></p>\n<h3>kafka와 연결하기</h3>\n<ul>\n<li><code>KafkaAdmin</code></li>\n<li><code>ProducerFactory</code></li>\n<li><code>ConsumerFactory</code></li>\n</ul>\n<h4>Factory Listeners</h4>\n<p>버전 2.5부터, DefaultKafkaProducerFactory와 DefaultKafkaConsumerFactory를 Listener로 구성하여 producer와 consumer가 생성되고 닫힐 때마다 알림을 받을 수 있습니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Producer Factory Listner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Listener</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">default</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">producerAdded</span><span class=\"mtk1\">(</span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Producer</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">producer</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">default</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">producerRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Producer</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">producer</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Consumer Factory Listner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Listener</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">default</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">consumerAdded</span><span class=\"mtk1\">(</span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Producer</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">consumer</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">default</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">consumerRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk10\">String</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Producer</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">consumer</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>Topic 설정</h3>\n<p>어플리케이션에 <code>KafkaAdmin</code> bean을 정의하였다면, 어플리케이션은 자동으로 토픽을 브로커에 추가합니다. 이렇게 하기 위해선 각 토픽마다 <code>NewTopic</code> 타입의 <code>@Bean</code>을 추가해야 합니다. 버전 2.3은 bean 생생성에 대한 편의를 위해 <code>TopicBuilder</code> 클래스를 새로 도입하였습니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaAdmin</span><span class=\"mtk1\"> </span><span class=\"mtk11\">admin</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">configs</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">HashMap</span><span class=\"mtk1\">&lt;&gt;();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">configs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">put</span><span class=\"mtk1\">(</span><span class=\"mtk12\">AdminClientConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BOOTSTRAP_SERVERS_CONFIG</span><span class=\"mtk1\">, ...);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">KafkaAdmin</span><span class=\"mtk1\">(configs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic1</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;thing1&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">partitions</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">replicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">compact</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic2</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;thing2&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">partitions</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">replicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">config</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TopicConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COMPRESSION_TYPE_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;zstd&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic3</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;thing3&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">assignReplicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Arrays</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asList</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">assignReplicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Arrays</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asList</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">assignReplicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Arrays</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asList</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">config</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TopicConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COMPRESSION_TYPE_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;zstd&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>2.6 버전 부터, <code>.partitions()</code>와 <code>replicas()</code>를 생략할 수 있으며 브로커가 이 속성들을 적용할 것입니다. 브로커의 버전은 2.4.0 이상이어야 합니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic4</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;defaultBoth&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic5</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;defaultPart&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">replicas</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NewTopic</span><span class=\"mtk1\"> </span><span class=\"mtk11\">topic6</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TopicBuilder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;defaultRepl&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">partitions</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">build</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>디폴트로, 브로커가 사용가능하지 않을 때, 메세지는 기록되지만, 컨텍스트는 계속해서 로드됩니다. 프로그래밍적으로 admin의 <code>initialize()</code>를 호출할 수 있습니다. 만약 이 조건이 중요하게 여겨지길 바란다면, admin의 <code>fatalIfBrokerNotAvailable</code> 속성을 <code>true</code>로 설정하십시오. 컨텍스트는 이니셜에 실패할 것입니다.   </p>\n<p><code>AdminClient</code>를 사용하면 더 많은 advanced feature을 사용할 수 있습니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Autowired</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaAdmin</span><span class=\"mtk1\"> </span><span class=\"mtk12\">admin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">AdminClient</span><span class=\"mtk1\"> </span><span class=\"mtk12\">client</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">AdminClient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk12\">admin</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getConfigurationProperties</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">client</span><span class=\"mtk1\">.</span><span class=\"mtk11\">close</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h3>메세지 보내기</h3>\n<h4><code>KafkaTemplate</code> 사용하기</h4>\n<p><code>KafkaTemplate</code>은 producer를 감싸고 Kafka 토픽에게 데이터를 보내는 편리한 메소드를 제공합니다.</p>\n<p><code>sendDefault</code> API를 사용하려면 템플릿에 디폴트 토픽이 제공되어야 합니다.</p>\n<p>API는 타임스탬프를 매개 변수로 사용하고 이 타임스탬프를 레코드에 저장합니다. 사용자가 제공한 타임스탬프의 저장 방법은 Kafka 항목에 구성된 타임스탬프 유형에 따라 다릅니다. 항목이 <code>CREATE_TIME</code>를 사용하도록 구성된 경우, 사용자 지정 타임스탬프가 기록되거나 지정되지 않은 경우 생성됩니다. 항목이 <code>LOG_APPEND_TIME</code>을 사용하도록 구성된 경우, 사용자 지정 타임스탬프가 무시되고 브로커가 로컬 브로커 시간에 추가됩니다.</p>\n<p><code>metrics</code>와 <code>partitionFor</code> 메서드는 기본 <code>Producer</code>에서 동일한 메서드에 위임됩니다. <code>execute</code> 메서드는 기본 <code>Producer</code>에 직접 액세스할 수 있습니다.</p>\n<p>템플릿을 사용하려면 생산자 팩토리를 구성하고 템플릿 생성자에 제공할 수 있습니다. 다음 예에서는 이 방법을 보여 줍니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ProducerFactory</span><span class=\"mtk1\">&lt;Integer, String&gt; </span><span class=\"mtk11\">producerFactory</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DefaultKafkaProducerFactory</span><span class=\"mtk1\">&lt;&gt;(</span><span class=\"mtk11\">producerConfigs</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Map</span><span class=\"mtk1\">&lt;String, Object&gt; </span><span class=\"mtk11\">producerConfigs</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">props</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">HashMap</span><span class=\"mtk1\">&lt;&gt;();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">props</span><span class=\"mtk1\">.</span><span class=\"mtk11\">put</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BOOTSTRAP_SERVERS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;localhost:9092&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">props</span><span class=\"mtk1\">.</span><span class=\"mtk11\">put</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">KEY_SERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringSerializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">props</span><span class=\"mtk1\">.</span><span class=\"mtk11\">put</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ProducerConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">VALUE_SERIALIZER_CLASS_CONFIG</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StringSerializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// See https://kafka.apache.org/documentation/#producerconfigs for more properties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> props;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Bean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaTemplate</span><span class=\"mtk1\">&lt;Integer, String&gt; </span><span class=\"mtk11\">kafkaTemplate</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaTemplate</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk11\">producerFactory</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>기본적으로 템플릿은 <code>LoggingProducerListener</code>로 구성되어 있으며, 전송에 성공하면 오류를 기록하고 아무 작업도 수행하지 않습니다.</p>\n<p>편의를 위해 메소드 중 하나만 구현하려는 경우 기본 메서드 구현이 제공됩니다.</p>\n<p>전송 메소드는 <code>ListenableFuture&#x3C;SendResult></code>을 반환합니다. 수신기에 콜백을 등록하여 비동기식으로 전송 결과를 수신할 수 있습니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">ListenableFuture</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">future</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">template</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;myTopic&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;something&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">future</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addCallback</span><span class=\"mtk1\">(</span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ListenableFutureCallback</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt;() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onSuccess</span><span class=\"mtk1\">(</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onFailure</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Throwable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ex</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p><code>SendResult</code>에는 <code>ProducerRecord</code>와 <code>RecordMetadata</code> 두 가지 속성이 있습니다. 이러한 개체에 대한 자세한 내용은 Kafka API 설명서를 참조하십시오.</p>\n<p>실패 시 던질 수 있는 것은 <code>KafkaProducerException</code>에게 던져줄 수 있습니다.예외: 실패한 <code>ProducerRecord</code> 속성에 실패한 레코드가 포함되어 있습니다.</p>\n<p>버전 2.5부터, <code>ListenableFutureCallback</code> 대신 <code>KafkaSendCallback</code>을 사용할 수 있습니다. <code>ListenableFutureCallback</code>을 사용하면 실패한 <code>ProducerRecord</code>를 쉽게 추출할 수 있으므로 <code>Throwable</code>을 캐스팅할 필요가 없습니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">ListenableFuture</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">future</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">template</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;topic&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;thing&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">future</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addCallback</span><span class=\"mtk1\">(</span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaSendCallback</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onSuccess</span><span class=\"mtk1\">(</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onFailure</span><span class=\"mtk1\">(</span><span class=\"mtk10\">KafkaProducerException</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ex</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">ProducerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">failed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ex</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getFailedProducerRecord</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>람다식으로도 표현가능합니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">ListenableFuture</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">future</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">template</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;topic&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;thing&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">future</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addCallback</span><span class=\"mtk1\">(result </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }, (</span><span class=\"mtk10\">KafkaFailureCallback</span><span class=\"mtk1\">&lt;Integer, String&gt;) ex </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk10\">ProducerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">failed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ex</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getFailedProducerRecord</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<h4>샘플</h4>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendToKafka</span><span class=\"mtk1\">(</span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MyOutputData</span><span class=\"mtk1\"> data) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">final</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ProducerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">record</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">createRecord</span><span class=\"mtk1\">(data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">ListenableFuture</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt; </span><span class=\"mtk12\">future</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">template</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(record);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">future</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addCallback</span><span class=\"mtk1\">(</span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">KafkaSendCallback</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt;&gt;() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onSuccess</span><span class=\"mtk1\">(</span><span class=\"mtk10\">SendResult</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Integer</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">handleSuccess</span><span class=\"mtk1\">(data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onFailure</span><span class=\"mtk1\">(</span><span class=\"mtk10\">KafkaProducerException</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ex</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">handleFailure</span><span class=\"mtk1\">(data, record, ex);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>메세지 받기</h3>\n<p><code>MessageListnerContainer</code>를 설정하거나 메세지 리스너를 제공하거나 <code>@KafkaListener</code> 어노테이션을 사용하여 메세지를 받을 수 있습니다.</p>\n<h4>Message Listner</h4>\n<p>message listner container을 사용할 경우, 데이터를 받기위한 리스너를 항상 제공해야 합니다. 현재 8가지의 지원되는 인터페이스가 존재합니다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MessageListener</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onMessage</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ConsumerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">K</span><span class=\"mtk1\">, </span><span class=\"mtk10\">V</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","id":"302aab8e-16d6-5856-92d5-d4735a922c11","excerpt":"원본 : https://docs.spring.io/spring-kafka/reference/html/#reference kafka와 연결하기 KafkaAdmin ProducerFactory ConsumerFactory Factory Listeners 버전 2.5부터, DefaultKafkaProducerFactory…"}},{"node":{"frontmatter":{"path":"kafka_spring_video","title":"Reactive를 품은 Spring Kafka","category":"Kafka","date":"Jan 24, 2021"},"html":"<p>이 글은 이병찬 님의 강의를 요약한 내용입니다. 원본 강의는 <a href=\"https://youtu.be/HzQfJNusnO8\">링크</a>에서 확인하실 수 있습니다.</p>\n<h3>Kafka</h3>\n<p>아주 인기있는 스트리밍 플랫폼<br>\nSpring에서 Kafka를 사용하려면 Spring Kafka를 사용하면 된다.<br>\n<code>@KafkaListner</code> 어노테이션을 붙이는 것만으로도 웹 MVC에서 리퀘스트 매핍을 한 것과 같은 역할을 할 수 있다.<br>\n컨트롤러와 이 listner가 하는 일이 동일하다고 보면 된다.   </p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">KafkaListener</span><span class=\"mtk1\">(topics=</span><span class=\"mtk8\">&quot;myTopic&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">listen</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ConsumerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk15\">?</span><span class=\"mtk1\">, </span><span class=\"mtk15\">?</span><span class=\"mtk1\">&gt; record) throws Exception {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">logger</span><span class=\"mtk1\">.</span><span class=\"mtk11\">info</span><span class=\"mtk1\">(</span><span class=\"mtk12\">record</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Do Something...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li>\"myTopic\" 토픽의 이름을 통해 들어온 데이터를 <code>ConsumerRecord</code> 형태로 만들어서 전달이 된다.</li>\n<li>\n<p>하지만 한 가지 약점이 존재</p>\n<ul>\n<li>스레드를 점령한다</li>\n<li>한 시점에 하나 스레드에서 하나의 레코드만 처리할 수 있다.</li>\n<li>메소드 처리 시간이 오래 걸리면 큐에 쌓여 있는 데이터를 소모하는 시간보다 처리하는 시간이 더 길어져서 병목현상 발생할 수 있다.</li>\n<li>이 문제를 해결하기 위해 파티션을 쪼개서 병렬적으로 수행하게 한다.</li>\n<li>하지만 동시성을 준 것이 아니고 병렬성을 준 것이기 때문에 문제는 여전히 존재하게 된다.</li>\n</ul>\n</li>\n</ul>\n<h3>Streaming Platform의 본질?</h3>\n<p>구조</p>\n<blockquote>\n<p>producer ---publish---> stream &#x3C;---subscribe--- consumer</p>\n</blockquote>\n<ul>\n<li>Reactive의 구조와 굉장히 유사</li>\n</ul>\n<h3>ReactiveX의 Observable, Reactor의 Flux 본질??</h3>\n<ul>\n<li>어떤 대상을 <strong>Asynce</strong>하게 다루는 것</li>\n<li><strong>Async</strong>하게 다룬 것을 <strong>Stream</strong>으로 처리하겠다.</li>\n<li>그렇기 때문에 kafka에서 사용하는 것을 flux로 완전히 대체할 수 있다고 해석할 수 있다.</li>\n<li>\n<p>consumer</p>\n<blockquote>\n<p>특정 토픽에 대해서 kafka에 구독을 하고, 이것을 flux로 받아서 한 건 한 건씩 비동기로 처리를 하겠어!</p>\n</blockquote>\n</li>\n<li>\n<p>producer</p>\n<blockquote>\n<p>그저 flux create를 하는 것 뿐이야! 데이터만 밀어 넣어주면 돼!</p>\n</blockquote>\n</li>\n</ul>\n<h2>Reactor Kafka</h2>\n<ul>\n<li>Maven이나 Gradle에서 dependecy만 추가해주면 사용가능하다</li>\n<li>Spring Kafka 2.3.0부터 Reactor Kafka를 본격적으로 지원하기 시작했다.</li>\n</ul>\n<hr>\n<h1>기본 기능 구현하기</h1>\n<ol>\n<li>DB에 데이터가 업데이트되면 Detector는 그 정보를 메시지로 만들고 스트림으로 발행한다.   </li>\n<li>Update 처리기를 메시지를 읽고 업데이트 정보를 프로세싱한다.</li>\n</ol>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveEvent)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">getReceivers)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">dataProcessing)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>메시지 중복 제거하기</h3>\n<ul>\n<li>5개의 detector가 존재한다.</li>\n<li>동일한 이벤트가 중복 감지되는 건 무시해야 한다.</li>\n<li><code>sampleFirst()</code>와 <code>groupBy()</code>를 이용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">groupBy</span><span class=\"mtk1\">(Message</span><span class=\"mtk15\">::</span><span class=\"mtk1\">key)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(flux </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flux</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sampleFirst</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Duration</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ofSeconds</span><span class=\"mtk1\">(</span><span class=\"mtk7\">30</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveEvent)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">getReceivers)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">notify)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>데이터 모아서 처리하기</h3>\n<ul>\n<li>한 번에 많은 데이터를 모아서 처리한다.</li>\n<li>\n<p>기준 시간 동안 발생한 여러 이벤트는 하나의 메시지로 모아서 통지하자.</p>\n<ul>\n<li>이게 우리와 맞는 것인가?</li>\n</ul>\n</li>\n<li><code>buffer()</code>를 이용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">groupBy</span><span class=\"mtk1\">(Message</span><span class=\"mtk15\">::</span><span class=\"mtk1\">key)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(flux </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flux</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buffer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Duration</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ofSeconds</span><span class=\"mtk1\">(</span><span class=\"mtk7\">30</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">notify)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>정해진 양만큼만 처리하기</h3>\n<ul>\n<li>요청량이 과다해질 경우 장애가 발생할 수 있다.</li>\n</ul>\n<h4>메시지가 흘러가는 큰 그림</h4>\n<img srg='./images/2021-01-24-19-59-06.png' width=700 alt='sample kafka flow'/>\n<ul>\n<li>\n<p>Flow의 flow</p>\n<ol>\n<li>subscriber가 publisher에게 <code>subscribe()</code></li>\n<li>publisher가 subscriber에게 <code>onSubscribe()</code></li>\n<li>subscriber가 publisher에게 <code>request(n)</code></li>\n<li>publisher는 subscriber에게 n개의 데이터만 제공</li>\n</ol>\n</li>\n<li>Subscriber를 커스텀하면 된다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CustomSubscriber</span><span class=\"mtk1\"> </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BaseSubscriber</span><span class=\"mtk1\">&lt;~&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bookOnSubscribe</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Subscription</span><span class=\"mtk1\"> </span><span class=\"mtk12\">subscription</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">request</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Overrice</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hookOnNext</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ReceiverRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">record</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(record)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk3\">/* Do something */</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">(r </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">offsetSink</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">(record);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">request</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>시간을 달리는 메시지</h3>\n<h4>offset이 증가하는 경우에만 Commit을 하자.</h4>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CustomSubscriber</span><span class=\"mtk1\"> </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BaseSubscriber</span><span class=\"mtk1\">&lt;~&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FluxSink</span><span class=\"mtk1\">&lt;~&gt; offsetSink;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hookOnNext</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ReceiverREcord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">record</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        Flux.&lt;~&gt;</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(sink </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> offsetSink = sink)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">reduce</span><span class=\"mtk1\">(-</span><span class=\"mtk7\">1L</span><span class=\"mtk1\">, (last, r) </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> last &lt; </span><span class=\"mtk12\">r</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offset</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span><span class=\"mtk15\">?</span><span class=\"mtk1\"> </span><span class=\"mtk11\">commit</span><span class=\"mtk1\">(r)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span><span class=\"mtk15\">:</span><span class=\"mtk1\"> last)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2>몇 가지 결론</h2>\n<ul>\n<li>구슬이 서 말이라도 꿰어야 보배라</li>\n<li>More Abstraction, Less Code!</li>\n<li>깊이 알고 제대로 쓰자</li>\n<li>모든 것을 공짜로 해결할 수 없다.</li>\n</ul>\n<hr>\n<ul>\n<li><a href=\"https://github.com/EleganceLESS/nhn-forward-2019\">github 예제 코드</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","id":"7ac41b2b-5770-52c5-9aa8-effef64883ab","excerpt":"이 글은 이병찬 님의 강의를 요약한 내용입니다. 원본 강의는 링크에서 확인하실 수 있습니다. Kafka 아주 인기있는 스트리밍 플랫폼 Spring에서 Kafka를 사용하려면 Spring Kafka를 사용하면 된다. @KafkaListner 어노테이션을 붙이는 것만으로도 웹 MVC…"}},{"node":{"frontmatter":{"path":"kafka_quick_start","title":"Kafka 기본 개념 및 Quick Start","category":"Kafka","date":"Jan 19, 2021"},"html":"<h2>Kafka가 어디에 쓴느 물건인가</h2>\n<p>이름은 Apache Kafka<br>\nLinkedIn에서 <strong>분산 메시징 시스템</strong>으로써 오픈소스로 공개했다.<br>\n대용량의 실시간 로그처리에 특화되었다.   </p>\n<h3>용어 정리</h3>\n<h4>topic</h4>\n<p>producer가 생성하고 consumer가 소비하는 메세지</p>\n<h4>partition</h4>\n<ul>\n<li><code>topic</code> 안에서 여러 개의 partition으로 나누어져 있다.   </li>\n<li>메세지를 쓰고 읽을 때 분산 처리하여 빠르게 수행 가능하다.   </li>\n<li>consumer group 당 하나의 consumer<strong>만</strong> 접근이 허용된다.</li>\n<li>log : <code>partition</code>의 한 칸을 뜻한다.</li>\n</ul>\n<h4>broker</h4>\n<ul>\n<li>topic 기준으로 메세지를 관리한다.</li>\n<li>producer에게 받은 메시지를 topic 별로 분류하여 쌓아 놓는다.</li>\n</ul>\n<h4>producer</h4>\n<ul>\n<li>메세지를 생성하고 topic에 메세지를 broker에게 전달한다.   </li>\n<li>producer는 consumer의 존재를 모른다.</li>\n</ul>\n<h4>consumer</h4>\n<ul>\n<li>topic을 구독하여 broker에게서 해당 토픽에 있는 메세지를 소비한다.</li>\n<li>해당 topic 내에 각 파티션에 존재하는 offset의 위치를 통해서 이전에 소비했던 offset의 위치를 기억하고 관리한다.</li>\n<li>producer가 consumer에게 메시지를 push하는 방식이 아닌, <strong>consumer가 producer로부터 pull하는 방식</strong></li>\n<li></li>\n</ul>\n<h4>consumer group</h4>\n<ul>\n<li>consumer들의 묶음</li>\n<li>반드시 해당 topic의 파티션은 그 consumer group과 1:n 매칭을 해야 한다.</li>\n<li>그룹을 생성할 때 동일한 이름의 그룹이 있는지 체크해 봐야 한다.</li>\n<li>\n<p>존재하는 이유?</p>\n<ol>\n<li>그룹 내 컨슈머 하나가 장애가 발생하더라도 멈추지 않고 작업을 이어갈 수 있다.</li>\n<li>group 별로 자신만의 offset을 관리하기 때문에, 동일한 토픽을 여러 consumer group이 consume하더라도 데이터의 손실 없이 가져갈 수 있다.</li>\n</ol>\n</li>\n<li>\n<p>topic의 partition >= consumer group의 consumer 이어야 한다.</p>\n<ul>\n<li>partition &#x3C; consumer 의 경우 : 놀고 있는 consumer가 발생하여 비효율적이다.</li>\n</ul>\n</li>\n</ul>\n<h4>replication</h4>\n<ul>\n<li>partition을 복제하여 클러스터에 분산시킬 수 있다.</li>\n<li>replication factor N으로 설정할 경우 N개의 replica가 생성된다.</li>\n<li>replica에는 1개의 leader와 N-1개의 follower로 구성된다.</li>\n<li>\n<p>partition에 대한 읽기와 쓰기는 모두 leader에서 이루어진다.</p>\n<ul>\n<li>follower들은 단순히 leader를 복제한다.</li>\n</ul>\n</li>\n<li>만약 leader에 장애가 발생할 경우 follwer 중 하나가 새로운 leader가 된다.</li>\n</ul>\n<h1>Kafka Quick Start</h1>\n<h4>STEP 1: kafka 설치</h4>\n<p><a href=\"https://www.apache.org/dyn/closer.cgi?path=/kafka/2.7.0/kafka_2.13-2.7.0.tgz\">Download</a>에서 다운로드한다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ tar -zxf kafka_2.13-2.7.0.tgz</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">$ cd kafka_2.13-2.7.0</span></span></code></pre>\n<h4>STEP 2: kafka 환경 시작하기</h4>\n<ol>\n<li>\n<p>terminal(1) zookeeper 서비스를 시작한다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/zookeeper-server-start.sh config/zookeeper.properties</span></span></code></pre>\n</li>\n<li>\n<p>terminal(2) kafka broker 서비스를 시작한다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-server-start.sh config/server.properties</span></span></code></pre>\n<p>모두 성공하였다면 기본 Kafka 환경이 실행되고 있고 사용할 준비가 된 것이다.</p>\n</li>\n</ol>\n<h4>STEP 3: 이벤트를 저장할 topic 생성하기</h4>\n<p>이벤트는 records, messages 라고도 불린다.<br>\nKafka는 event streaming platform이기 때문에 다양한 기종에서 이벤트를 읽기, 쓰기, 저장하기, 프로세싱이 가능하다.\n이벤트들은 토픽에 저장된다. 아주 간단하게 말하자면 토픽은 파일 시스템의 폴더와 유사하고, 이벤트는 폴터 안의 파일이다.<br>\n이벤트를 쓰기 전에, 토픽을 생성해야 한다.</p>\n<ol>\n<li>\n<p>terminal(3) 토픽 생성</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-topics.sh --create --topic quickstart-events --bootstrap-server localhost:9092</span></span></code></pre>\n</li>\n<li>\n<p>Kafka의 커맨드 라인 툴은 모두 추가 옵션을 가지고 있다. 예를 들어 새로운 토픽의 디테일을 보여주는 밑 예제</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-topics.sh --describe --topic quickstart-events --bootstrap-server localhost:9092</span></span></code></pre>\n</li>\n</ol>\n<h4>STEP 4: 토픽에 이벤트 쓰기</h4>\n<p>Kafka 클라이언트는 이벤트를 쓰거나 읽기 위해 네트워크를 통해서 borker와 소통한다.<br>\n이벤트를 한 번 받으면 borker는 내구성이 좋은 방식으로 이벤트를 저장한다.</p>\n<ol>\n<li>\n<p>console(3) producer 생성하기</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-console-producer.sh --topic quickstart-events --bootstrap-server localhost:9092</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt; Hello world</span></span></code></pre>\n</li>\n</ol>\n<h4>STEP 5: 이벤트 읽기</h4>\n<ol>\n<li>\n<p>console(4) consumer 생성하기</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ bin/kafka-console-consumer.sh --topic quickstart-events --from-beginnig --bootstrap-server localhost:9092</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Hello world</span></span></code></pre>\n<h4>SETP 6: kafka 커넥트로 데이터를 이벤트 스트림으로 import/export 하기</h4>\n</li>\n</ol>\n<h4>STEP 7: kafka streams로 이벤트 처리하기</h4>\n<p>데이터를 kafka의 이벤트로 저장을 하게 되면, Java/Scala로 kafka streams 클라이언트 라이브러리로 데이터를 처리할 수 있다. 라이브러리는 정확히 한 번, 상태 저장 작업 및 집계, 윈도우 설정, 조인, 이벤트 시간에 따른 처리 등을 지원한다.</p>\n<ul>\n<li><a href=\"https://kafka.apache.org/25/documentation/streams/\">Kafka streams: mission critical real-time application과 마이크로 서비스를 작성하기 가장 쉬운 방법</a></li>\n<li><a href=\"https://eun-seong.github.io/TIL/posts/Kafka/kafka_streams_write_app_tutorial\">Kafka 데모 앱 만들기</a></li>\n</ul>\n<h4>STEP 8: kafka 종료하기</h4>\n<ol>\n<li>producer, consumer 종료</li>\n<li>kafka broker 종료</li>\n<li>zookeeper 서버 종료</li>\n<li>\n<p>kafka 환경의 이벤트를 포함한 모든 데이터를 지우고 싶을 때</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"shell\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ rm -rf /tmp/kafka-logs /tmp/zookeeper</span></span></code></pre>\n</li>\n</ol>\n<hr>\n<ul>\n<li><a href=\"https://www.popit.kr/kafka-consumer-group/\">Kafka Consumer Group</a></li>\n<li><a href=\"https://kafka.apache.org/quickstart#quickstart_kafkastreams\">Kafka DOCS</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","id":"bc3a663b-894b-5260-b20b-2a8f27d12f82","excerpt":"Kafka가 어디에 쓴느 물건인가 이름은 Apache Kafka LinkedIn에서 분산 메시징 시스템으로써 오픈소스로 공개했다. 대용량의 실시간 로그처리에 특화되었다.    용어 정리 topic producer가 생성하고 consumer가 소비하는 메세지 partition topic 안에서 여러 개의 partition…"}},{"node":{"frontmatter":{"path":"kafka_streams_write_app_tutorial","title":"Kafka Streams 데모 앱 만들기","category":"Kafka","date":"Jan 19, 2021"},"html":"<h1>데모 앱 만들기</h1>\n<hr>\n<ul>\n<li><a href=\"https://kafka.apache.org/25/documentation/streams/quickstart\">Kafka streams demo app</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","id":"38e410b4-83b8-553f-9d4d-7195e2f1fee0","excerpt":"데모 앱 만들기 Kafka streams demo app"}}]}},"staticQueryHashes":["3649515864"]}