{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/Kafka/kafka_spring_video","result":{"pageContext":{"html":"<p>이 글은 이병찬 님의 강의를 요약한 내용입니다. 원본 강의는 <a href=\"https://youtu.be/HzQfJNusnO8\">링크</a>에서 확인하실 수 있습니다.</p>\n<h3>Kafka</h3>\n<p>아주 인기있는 스트리밍 플랫폼<br>\nSpring에서 Kafka를 사용하려면 Spring Kafka를 사용하면 된다.<br>\n<code>@KafkaListner</code> 어노테이션을 붙이는 것만으로도 웹 MVC에서 리퀘스트 매핍을 한 것과 같은 역할을 할 수 있다.<br>\n컨트롤러와 이 listner가 하는 일이 동일하다고 보면 된다.   </p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">KafkaListener</span><span class=\"mtk1\">(topics=</span><span class=\"mtk8\">&quot;myTopic&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">listen</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ConsumerRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk15\">?</span><span class=\"mtk1\">, </span><span class=\"mtk15\">?</span><span class=\"mtk1\">&gt; record) throws Exception {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">logger</span><span class=\"mtk1\">.</span><span class=\"mtk11\">info</span><span class=\"mtk1\">(</span><span class=\"mtk12\">record</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Do Something...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li>\"myTopic\" 토픽의 이름을 통해 들어온 데이터를 <code>ConsumerRecord</code> 형태로 만들어서 전달이 된다.</li>\n<li>\n<p>하지만 한 가지 약점이 존재</p>\n<ul>\n<li>스레드를 점령한다</li>\n<li>한 시점에 하나 스레드에서 하나의 레코드만 처리할 수 있다.</li>\n<li>메소드 처리 시간이 오래 걸리면 큐에 쌓여 있는 데이터를 소모하는 시간보다 처리하는 시간이 더 길어져서 병목현상 발생할 수 있다.</li>\n<li>이 문제를 해결하기 위해 파티션을 쪼개서 병렬적으로 수행하게 한다.</li>\n<li>하지만 동시성을 준 것이 아니고 병렬성을 준 것이기 때문에 문제는 여전히 존재하게 된다.</li>\n</ul>\n</li>\n</ul>\n<h3>Streaming Platform의 본질?</h3>\n<p>구조</p>\n<blockquote>\n<p>producer ---publish---> stream &#x3C;---subscribe--- consumer</p>\n</blockquote>\n<ul>\n<li>Reactive의 구조와 굉장히 유사</li>\n</ul>\n<h3>ReactiveX의 Observable, Reactor의 Flux 본질??</h3>\n<ul>\n<li>어떤 대상을 <strong>Asynce</strong>하게 다루는 것</li>\n<li><strong>Async</strong>하게 다룬 것을 <strong>Stream</strong>으로 처리하겠다.</li>\n<li>그렇기 때문에 kafka에서 사용하는 것을 flux로 완전히 대체할 수 있다고 해석할 수 있다.</li>\n<li>\n<p>consumer</p>\n<blockquote>\n<p>특정 토픽에 대해서 kafka에 구독을 하고, 이것을 flux로 받아서 한 건 한 건씩 비동기로 처리를 하겠어!</p>\n</blockquote>\n</li>\n<li>\n<p>producer</p>\n<blockquote>\n<p>그저 flux create를 하는 것 뿐이야! 데이터만 밀어 넣어주면 돼!</p>\n</blockquote>\n</li>\n</ul>\n<h2>Reactor Kafka</h2>\n<ul>\n<li>Maven이나 Gradle에서 dependecy만 추가해주면 사용가능하다</li>\n<li>Spring Kafka 2.3.0부터 Reactor Kafka를 본격적으로 지원하기 시작했다.</li>\n</ul>\n<hr>\n<h1>기본 기능 구현하기</h1>\n<ol>\n<li>DB에 데이터가 업데이트되면 Detector는 그 정보를 메시지로 만들고 스트림으로 발행한다.   </li>\n<li>Update 처리기를 메시지를 읽고 업데이트 정보를 프로세싱한다.</li>\n</ol>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveEvent)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">getReceivers)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">dataProcessing)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>메시지 중복 제거하기</h3>\n<ul>\n<li>5개의 detector가 존재한다.</li>\n<li>동일한 이벤트가 중복 감지되는 건 무시해야 한다.</li>\n<li><code>sampleFirst()</code>와 <code>groupBy()</code>를 이용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">groupBy</span><span class=\"mtk1\">(Message</span><span class=\"mtk15\">::</span><span class=\"mtk1\">key)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(flux </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flux</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sampleFirst</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Duration</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ofSeconds</span><span class=\"mtk1\">(</span><span class=\"mtk7\">30</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveEvent)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">getReceivers)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">notify)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>데이터 모아서 처리하기</h3>\n<ul>\n<li>한 번에 많은 데이터를 모아서 처리한다.</li>\n<li>\n<p>기준 시간 동안 발생한 여러 이벤트는 하나의 메시지로 모아서 통지하자.</p>\n<ul>\n<li>이게 우리와 맞는 것인가?</li>\n</ul>\n</li>\n<li><code>buffer()</code>를 이용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">process</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">consume</span><span class=\"mtk1\">().</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">recordToEventObject)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">groupBy</span><span class=\"mtk1\">(Message</span><span class=\"mtk15\">::</span><span class=\"mtk1\">key)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(flux </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flux</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buffer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Duration</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ofSeconds</span><span class=\"mtk1\">(</span><span class=\"mtk7\">30</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">notify)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk15\">::</span><span class=\"mtk1\">saveResult)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>정해진 양만큼만 처리하기</h3>\n<ul>\n<li>요청량이 과다해질 경우 장애가 발생할 수 있다.</li>\n</ul>\n<h4>메시지가 흘러가는 큰 그림</h4>\n<p><img src=\"../2021-01-24-19-59-06.png\"></p>\n<ul>\n<li>\n<p>Flow의 flow</p>\n<ol>\n<li>subscriber가 publisher에게 <code>subscribe()</code></li>\n<li>publisher가 subscriber에게 <code>onSubscribe()</code></li>\n<li>subscriber가 publisher에게 <code>request(n)</code></li>\n<li>publisher는 subscriber에게 n개의 데이터만 제공</li>\n</ol>\n</li>\n<li>Subscriber를 커스텀하면 된다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CustomSubscriber</span><span class=\"mtk1\"> </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BaseSubscriber</span><span class=\"mtk1\">&lt;~&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bookOnSubscribe</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Subscription</span><span class=\"mtk1\"> </span><span class=\"mtk12\">subscription</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">request</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Overrice</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hookOnNext</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ReceiverRecord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">record</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Mono</span><span class=\"mtk1\">.</span><span class=\"mtk11\">just</span><span class=\"mtk1\">(record)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">flatMap</span><span class=\"mtk1\">(</span><span class=\"mtk3\">/* Do something */</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">(r </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">offsetSink</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">(record);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">request</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>시간을 달리는 메시지</h3>\n<h4>offset이 증가하는 경우에만 Commit을 하자.</h4>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CustomSubscriber</span><span class=\"mtk1\"> </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BaseSubscriber</span><span class=\"mtk1\">&lt;~&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FluxSink</span><span class=\"mtk1\">&lt;~&gt; offsetSink;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hookOnNext</span><span class=\"mtk1\">(</span><span class=\"mtk10\">ReceiverREcord</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">String</span><span class=\"mtk1\">, </span><span class=\"mtk10\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">record</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        Flux.&lt;~&gt;</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(sink </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> offsetSink = sink)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">reduce</span><span class=\"mtk1\">(-</span><span class=\"mtk7\">1L</span><span class=\"mtk1\">, (last, r) </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> last &lt; </span><span class=\"mtk12\">r</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offset</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span><span class=\"mtk15\">?</span><span class=\"mtk1\"> </span><span class=\"mtk11\">commit</span><span class=\"mtk1\">(r)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span><span class=\"mtk15\">:</span><span class=\"mtk1\"> last)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">subscribe</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2>몇 가지 결론</h2>\n<ul>\n<li>구슬이 서 말이라도 꿰어야 보배라</li>\n<li>More Abstraction, Less Code!</li>\n<li>깊이 알고 제대로 쓰자</li>\n<li>모든 것을 공짜로 해결할 수 없다.</li>\n</ul>\n<hr>\n<ul>\n<li><a href=\"https://github.com/EleganceLESS/nhn-forward-2019\">github 예제 코드</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","title":"Reactive를 품은 Spring Kafka","date":"Jan 24, 2021"}},"staticQueryHashes":["3649515864"]}