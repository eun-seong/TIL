{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/Java/spring_writing_test_code","result":{"pageContext":{"html":"<ul>\n<li><code>main</code>에 있는 패키지와 동일하게 <code>test</code>에 패키지를 생성한다.</li>\n<li>보통 java에서 테스트 클래스의 이름은 <code>메인 클래스의 이름 + test</code>로 작성한다.</li>\n<li>\n<p>클래스 안의 함수마다 테스트를 할 수 있다.</p>\n<ul>\n<li>테스트를 할 함수에는 <code>@Test</code> 어노테이션 작성</li>\n<li><code>main</code> 함수를 작성하는 것처럼 작성하면 된다.</li>\n<li>\n<p><code>org.assertj.core.api.Assertions</code> 패키지의 <code>assertThat</code>을 요즘 많이 사용한다고 한다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">assertThat</span><span class=\"mtk1\">(실제값).</span><span class=\"mtk11\">isEqualTo</span><span class=\"mtk1\">(기대하는값);</span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>테스트 코드는 빌드될 때 포함되지 않는다.</li>\n<li>그래서 영어권 사람들과 협업하지 않으면 테스트 함수를 한글로 작성하는 경우도 많다고 한다.</li>\n<li>테스트는 독립적으로 실행되어야 한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MemberServiceTest</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk10\">Test</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">회원가입</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// given</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Member</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Member</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">member</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setName</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;deveun&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// when</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Long</span><span class=\"mtk1\"> </span><span class=\"mtk12\">saveId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">memberService</span><span class=\"mtk1\">.</span><span class=\"mtk11\">join</span><span class=\"mtk1\">(member);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// then</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Member</span><span class=\"mtk1\"> </span><span class=\"mtk12\">findMember</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">memberService</span><span class=\"mtk1\">.</span><span class=\"mtk11\">findOne</span><span class=\"mtk1\">(saveId).</span><span class=\"mtk11\">get</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Assertions</span><span class=\"mtk1\">.</span><span class=\"mtk11\">assertThat</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getName</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">isEqualTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">findMember</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getName</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li>given : 이러한 상황이 주어졌을 때</li>\n<li>when : 이걸 실행하면</li>\n<li>then : 이런 결과가 나와야 한다</li>\n</ul>\n<h3>예외 상황에 대한 테스트</h3>\n<ul>\n<li>테스트 케이스는 정상 플로우도 중요하지만 <strong>예외 플로우</strong>를 처리하는 것도 중요하다.</li>\n<li>\n<p><code>org.assertj.core.api.Assertions</code> 패키지의 <code>assertThrows</code>을 사용한다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">assertThrows</span><span class=\"mtk1\">(예외클래스.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">, 람다 함수);</span></span></span></code></pre>\n<ul>\n<li><code>람다 함수</code>에 해당하는 로직이 실행되면 <code>예외클래스</code>의 예외가 발생해야 한다.</li>\n<li>이 함수의 반환값이 실제로 예외가 발생했을 떄 반환되는 값이다.</li>\n<li>반환값을 다시 <code>assertThat</code> 함수를 이용하여 확인할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">Test</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> 중복</span><span class=\"mtk11\">_회원_예약</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// given</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Member</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member1</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Member</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">member1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setName</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;hello&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Member</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member2</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Member</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">member2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setName</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;hello&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// when</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">memberService</span><span class=\"mtk1\">.</span><span class=\"mtk11\">join</span><span class=\"mtk1\">(member);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">IllegalStateException</span><span class=\"mtk1\"> </span><span class=\"mtk12\">e</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">assertThrows</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IllegalStateException</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">, () </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memberService</span><span class=\"mtk1\">.</span><span class=\"mtk11\">join</span><span class=\"mtk1\">(member2));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertThat</span><span class=\"mtk1\">(</span><span class=\"mtk12\">e</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMessage</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">isEqualTo</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;이미 존재하는 회원입니다&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>각 테스트 함수가 시작되기 전</h3>\n<ul>\n<li>각 함수가 시작하기 전마다 실행되어야 하는 코드를 작성할 수 있다.</li>\n<li><code>@BeforeEach</code> 어노테이션을 붙인 함수를 사용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">BeforeEach</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">beforeEach</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 각 함수가 시작되기 전에 해야 하는 일</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 가령, 필드 할당 및 초기화</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3>각 테스트 함수가 완료된 후</h3>\n<ul>\n<li>각 함수가 끝날 떄마다 실행되어야 하는 코드를 작성할 수 있다.</li>\n<li><code>@AfterEach</code> 어노테이션을 붙인 함수를 사용한다.</li>\n</ul>\n<pre class=\"grvsc-container default-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@</span><span class=\"mtk10\">AfterEach</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">afterEach</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 각 함수가 끝나고 해야 하는 일</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 가령, repository 초기화(clear)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h1>SpringBoot Test</h1>\n<ul>\n<li><code>@SpringBootTest</code> 어노테이션 사용</li>\n<li><code>@Transactional</code> 어노테이션 사용</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","title":"[Spring] 테스트 코드 작성하기","date":"Feb 5, 2021"}},"staticQueryHashes":["3649515864"]}